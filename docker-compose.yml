version: '3.6'

networks:
  backend:
    name: ${DOCKER_NETWORK}
    driver: bridge
volumes:
  ipbpay_data: { }

services:
  nginx:
    container_name: nginx${DOCKER_CONTAINER_SUFFIX}
    build:
      context: docker/nginx
      args:
        - APP_ENV=${APP_ENV}
        - CHANGE_SOURCE=false
        - PHP_UPSTREAM_CONTAINER=php-fpm
        - PHP_UPSTREAM_PORT=9000
    #                - http_proxy
    #                - https_proxy
    #                - no_proxy
    environment:
      - TZ=Asia/Bangkok
    #    working_dir: /var/www/html
    volumes:
      - .:/var/www:cached
      - ./storage/docker/logs/nginx:/var/log/nginx
      - ./docker/nginx/sites:/etc/nginx/sites-available
    #      - docker/nginx/ssl/:/etc/nginx/ssl
    ports:
      - ${NGINX_PORT:-80}:80
    depends_on:
      - php-fpm
    restart: always
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
  ### PHP-FPM ##############################################
  php-fpm:
    container_name: php-fpm${DOCKER_CONTAINER_SUFFIX}
    build:
      context: docker/php-fpm
      args:
        - CHANGE_SOURCE=false
        - BASE_IMAGE_TAG_PREFIX=latest
        - LARADOCK_PHP_VERSION=7.4
        - LARADOCK_PHALCON_VERSION=4.0.6
        - PUID=${UID:-1000}
        - PGID=${GID:-1000}
        - INSTALL_OPCACHE=true
        - INSTALL_PHPREDIS=true
        - INSTALL_MYSQLI=true
        - INSTALL_INTL=true
        - INSTALL_EXIF=true
        - INSTALL_IMAGEMAGICK=true
    #                - http_proxy
    #                - https_proxy
    #                - no_proxy
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - ./docker/php-fpm/php7.4.ini:/usr/local/etc/php/php.ini
      - .:/var/www:cached
    restart: always
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
  ### PHP Worker ############################################
  php-worker:
    container_name: php-worker${DOCKER_CONTAINER_SUFFIX}
    build:
      context: docker/php-worker
      args:
        - CHANGE_SOURCE=false
        - LARADOCK_PHP_VERSION=7.4
        - INSTALL_PGSQL=true
        - INSTALL_REDIS=true
        - PUID=${UID:-1000}
        - PGID=${GID:-1000}
    environment:
      - TZ=${TZ:-Asia/Bangkok}
    volumes:
      - .:/var/www:cached
      - ./docker/php-worker/supervisord.d:/etc/supervisord.d
    networks:
      - backend
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
  ## postgres ############################################
  mysql:
    container_name: mysql${DOCKER_CONTAINER_SUFFIX}
    image: mysql:8.0
    volumes:
      - ipbpay_data:/var/lib/mysql
      - ./data:/home
    environment:
      MYSQL_ROOT_PASSWORD: ipbpay
      MYSQL_DATABASE: ipbpay
      MYSQL_USER: ipbpay
      MYSQL_PASSWORD: ipbpay
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
  phpmyadmin:
    container_name: phpmyadmin${DOCKER_CONTAINER_SUFFIX}
    build:
      context: docker/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MAX_EXECUTION_TIME=300
      - MEMORY_LIMIT=2056M
      - UPLOAD_LIMIT=2G
    ports:
      - ${PMA_PORT:-8001}:80
    networks:
      - backend
  ### redis ############################################
  redis:
    container_name: redis${DOCKER_CONTAINER_SUFFIX}
    build:
      context: docker/redis
      args:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - ./storage/docker/redis/data:/redis/data
    #      - ./storage/docker/redis/log:/var/log/redis
    restart: always
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
  ### Mailhog ################################################
#    mailhog:
#        image: mailhog/mailhog
#        environment:
#            - TZ=Asia/Bangkok
#        ports:
#            - 1025:1025
#            - 8025:8025
#        restart: always
#        networks:
#            - backend
#        logging:
#            driver: "json-file"
#            options:
#                max-size: "10m"
#                max-file: "2"
